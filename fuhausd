getgenv().Config = {}

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Push Simulator (Fuh Riley)", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"})
local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Egg = Window:MakeTab({
	Name = "Egg",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Misc = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Autofarm"
})

Tab:AddToggle({
	Name = "Auto Train",
	Default = false,
	Callback = function(v)
		Config.autoTrain = v
        spawn(autoTrain)
	end    
})

Tab:AddToggle({
	Name = "Auto Push",
	Default = false,
	Callback = function(v)
        Config.autoPush = v
        spawn(autoPush)
	end    
})

Tab:AddToggle({
	Name = "Auto Rebirth",
	Default = false,
	Callback = function(v)
        Config.autoRebirth = v
        spawn(autoRebirth)
	end    
})

local Section = Tab:AddSection({
	Name = "Auto PVP NPCS"
})

local wrldTables = {}

for _, v in pairs(workspace.Map.Worlds:GetChildren()) do
    if v:IsA("Folder") then
        table.insert(wrldTables, v.Name)
    end
end

local worldOptions = {"None"}

for _, v in pairs(wrldTables) do
    table.insert(worldOptions, v)
end

Tab:AddDropdown({
	Name = "World",
	Default = "None",
	Options = worldOptions,
	Callback = function(world)
		selectedWorld = world
	end    
})

local Levels = {}
local NPCMobs = {}

for _, v in pairs(workspace.Map.Worlds:GetDescendants()) do
    if v.Name == "Spawner" and v.Parent:IsA("Folder") then
        if v.Parent.Name ~= "Stage" and not Levels[v.Parent.Name] then
            table.insert(NPCMobs, v.Parent.Name)
            Levels[v.Parent.Name] = true 
        end
    end
end

local NPCOptions = {"None"}

for _, v in pairs(NPCMobs) do
    table.insert(NPCOptions, v)
end

Tab:AddDropdown({
	Name = "NPC Levels",
	Default = "None",
	Options = NPCOptions,
	Callback = function(level)
		selectedLevel = level
	end    
})

Tab:AddToggle({
	Name = "Auto Fight NPC",
	Default = false,
	Callback = function(v)
        Config.autoFight = v
        spawn(autoFight)
	end    
})

local Section = Tab:AddSection({
	Name = "Other Auto Stuff"
})

Tab:AddToggle({
	Name = "Auto Claim Rewards",
	Default = false,
	Callback = function(v)
        Config.autoReward = v
        spawn(autoReward)
	end    
})

Tab:AddToggle({
	Name = "Auto Spin",
	Default = false,
	Callback = function(v)
        Config.autoSpin = v
        spawn(autoSpin)
	end    
})

local eggTable = {}

for _, v in pairs(workspace.Map.Eggs:GetChildren()) do
    if v:IsA("Model") then
        table.insert(eggTable, v.Name)
    end
end

local eggOptions = {"None"}

for _, v in pairs(eggTable) do
    table.insert(eggOptions, v)
end

Egg:AddDropdown({
	Name = "Eggs",
	Default = "None",
	Options = eggOptions,
	Callback = function(egg)
		selectedEgg = egg
	end    
})

Egg:AddToggle({
	Name = "Auto Open Egg",
	Default = false,
	Callback = function(v)
        Config.autoEgg = v
        spawn(autoEgg)
	end    
})

Misc:AddButton({
	Name = "Claim Codes!",
	Callback = function()
      	claimCodes()
  	end    
})

Misc:AddButton({
	Name = "AntiAFK",
	Callback = function()
      	antiAFK()
  	end    
})

Egg:AddTextbox({
	Name = "Auto Delete While Opening",
	Default = "",
	TextDisappear = false,
	Callback = function(v1)
		pet1 = v1
	end	  
})

Egg:AddTextbox({
	Name = "Auto Delete While Opening",
	Default = "",
	TextDisappear = false,
	Callback = function(v2)
		pet2 = v2
	end	  
})

Egg:AddTextbox({
	Name = "Auto Delete While Opening",
	Default = "",
	TextDisappear = false,
	Callback = function(v3)
		pet3 = v3
	end	  
})

Egg:AddTextbox({
	Name = "Auto Delete While Opening",
	Default = "",
	TextDisappear = false,
	Callback = function(v4)
		pet4 = v4
	end	  
})

OrionLib:Init()

function autoTrain()
    while task.wait() and Config.autoTrain do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PowerGain"):FireServer()
    end
end

function autoPush()
    while task.wait() and Config.autoPush do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PushGain"):FireServer()
    end
end

function autoRebirth()
    while Config.autoRebirth do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Rebirth"):FireServer()
        task.wait(0.5)
    end
end

function autoFight()
    while task.wait() and Config.autoFight do
        local args = {
            [1] = workspace:WaitForChild("Map"):WaitForChild("Worlds"):WaitForChild(selectedWorld):WaitForChild("Levels"):WaitForChild(selectedLevel):WaitForChild("Spawner"),
            [2] = 5.373063564300537,
            [3] = "Simulate"
        }
            
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Push"):FireServer(unpack(args))
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PushGain"):FireServer()
    end
end

function autoEgg()
    while task.wait() and Config.autoEgg do
        local petsToDelete = {}
        if pet1 and pet1 ~= "" then petsToDelete[pet1] = true end
        if pet2 and pet2 ~= "" then petsToDelete[pet2] = true end
        if pet3 and pet3 ~= "" then petsToDelete[pet3] = true end
        if pet4 and pet4 ~= "" then petsToDelete[pet4] = true end

        local args = {
            [1] = "Hatch1",
            [2] = selectedEgg,
            [3] = petsToDelete
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Hatch"):FireServer(unpack(args))
    end        
end

function autoReward()
    while Config.autoReward do
        for _, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.UI.Pages.Playtime_rewards.Main.Main:GetChildren()) do
            if v:IsA("Frame") then
                if v:FindFirstChild("Timer").Text == "Claim!" then
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlaytimeRewards"):FireServer(v.Name)
                end
                task.wait(0.1)
            end
        end
    end
end

function autoSpin()
        while Config.autoSpin do
            local spinAmount = game:GetService("Players").LocalPlayer.PlayerGui.UI.Pages.Spins.Main.Spin.Quantity.Text

            spinAmount = spinAmount:gsub("x", "")

            if spinAmount > "0" then
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Spins"):FireServer()
        end
        task.wait(0.1)
    end
end

function claimCodes()
    local Codes = {"700kMEMBERS", "600kMEMBERS", "Get5Spins!", "MarineWorld", "400kMEMBERS", "10MVisits", "250kMEMBERS", "TurboByte", "Mauo", "Carot", "2MVisitsO", "3MVisitsO", "1MVisitsO", "FIRSTUPDATE", "PUSH"}

    for _, v in pairs(Codes) do
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Codes"):InvokeServer(v)
    end
end

function antiAFK()
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
       vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
       wait(1)
       vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end
